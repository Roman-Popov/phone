{"version":3,"sources":["utils/bem-helper/bem-helper.js","utils/bem-helper/index.js","components/carousel/carousel.jsx","components/phone-layer/phone-layer.jsx","components/bg-layer/bg-layer.jsx","app.jsx","reportWebVitals.js","index.js"],"names":["BemHelper","blockName","_elementSeparator","_modifierSeparator","this","elementName","modifiers","modify","element","base","Array","isArray","map","modifier","join","toPairs","reduce","styles","enabled","createBlock","block","Carousel","props","asNavFor","arrows","className","setCarouselRef","_","ref","modifyElement","React","PhoneLayer","carouselRef","BgLayer","App","state","setState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uTAKaA,EAAb,WAOE,WAAYC,GAAoB,yBAJhCC,kBAAoB,KAIW,KAF/BC,mBAAqB,KAGjBC,KAAKH,UAAYA,EARvB,oDAYM,OAAOG,KAAKH,YAZlB,8BAeUI,GACJ,MAAM,GAAN,OAAUD,KAAKH,WAAf,OAA2BG,KAAKF,mBAAhC,OAAoDG,KAhB1D,kCAmBcC,GACR,OAAOF,KAAKG,OAAOH,KAAKH,UAAWK,KApBzC,oCAuBgBD,EAAqBC,GAC/B,OAAOF,KAAKG,OAAOH,KAAKI,QAAQH,GAAcC,KAxBpD,6BA2BSG,EAAcH,GAAmC,IAAD,OACnD,MAAyB,kBAAdA,EACD,GAAN,OAAUG,GAAV,OAAiBL,KAAKD,oBAAtB,OAA2CG,GAE3CI,MAAMC,QAAQL,GACPA,EAAUM,KAAI,SAACC,GAAD,gBAAiBJ,GAAjB,OAAwB,EAAKN,oBAA7B,OAAkDU,MAAYC,KAAK,KAEnE,kBAAdR,EACAS,kBAAQT,GAAWU,QAAO,SAACC,GAAsC,IAAD,yDAAP,GAAO,mBAA5BJ,EAA4B,KAAlBK,EAAkB,KACnE,OAAIA,EACM,GAAN,mBAAWD,GAAX,WAAsBR,GAAtB,OAA6B,EAAKN,oBAAlC,OAAuDU,KAGpDI,IACR,IAAIH,KAAK,KAGTL,MA5Cb,KCFaU,EAAc,SAACC,GAAD,OAAmB,IAAIpB,EAAUoB,I,iBCGtDA,G,MAAQD,EAAY,aAEbE,EAAb,uKACY,IAAD,EACuEjB,KAAKkB,MAA3EC,EADD,EACCA,SADD,IACWC,cADX,aAC2BC,iBAD3B,MACuC,GADvC,MAC2CC,sBAD3C,MAC4D,SAAAC,GAAC,OAAIA,GADjE,EAGP,OACE,eAAC,IAAD,CACEH,OAAQA,EACRD,SAAUA,EACVE,UAAS,UAAKA,EAAL,YAAkBL,EAAMA,SACjCQ,IAAKF,EAJP,UAME,qBAAKD,UAAS,UAAKL,EAAMZ,QAAQ,OAAnB,YAA6BY,EAAMS,cAAc,MAAO,QACtE,qBAAKJ,UAAS,UAAKL,EAAMZ,QAAQ,OAAnB,YAA6BY,EAAMS,cAAc,MAAO,QACtE,qBAAKJ,UAAS,UAAKL,EAAMZ,QAAQ,OAAnB,YAA6BY,EAAMS,cAAc,MAAO,QACtE,qBAAKJ,UAAS,UAAKL,EAAMZ,QAAQ,OAAnB,YAA6BY,EAAMS,cAAc,MAAO,QACtE,qBAAKJ,UAAS,UAAKL,EAAMZ,QAAQ,OAAnB,YAA6BY,EAAMS,cAAc,MAAO,QACtE,qBAAKJ,UAAS,UAAKL,EAAMZ,QAAQ,OAAnB,YAA6BY,EAAMS,cAAc,MAAO,eAhB9E,GAA8BC,iBCHxBV,G,MAAQD,EAAY,gBAEbY,EAAb,uKAEI,OACE,sBAAKN,UAAWL,EAAMA,QAAtB,UACE,qBAAKK,UAAWL,EAAMZ,QAAQ,aAA9B,SACE,cAAC,EAAD,CAAWe,SAAUnB,KAAKkB,MAAMU,gBAElC,qBAAKP,UAAWL,EAAMZ,QAAQ,kBAPtC,GAAgCsB,iBCF1BV,G,MAAQD,EAAY,aAEbc,EAAb,uKAEI,OACE,qBAAKR,UAAWL,EAAMA,QAAtB,SACE,cAAC,EAAD,CAAUM,eAAgBtB,KAAKkB,MAAMI,eAAgBD,UAAWL,EAAMZ,QAAQ,oBAJtF,GAA6BsB,iBCAvBV,G,MAAQD,EAAY,QAEbe,EAAb,4MACEC,MAAQ,CACNH,YAAa,MAFjB,EAKEN,eAAiB,SAACM,GAAD,OAAiB,EAAKI,SAAS,CAAEJ,iBALpD,uDAQI,OACE,sBAAKP,UAAWL,EAAMA,QAAtB,UACE,cAAC,EAAD,CAASM,eAAgBtB,KAAKsB,iBAC9B,cAAC,EAAD,CAAYM,YAAa5B,KAAK+B,MAAMH,qBAX5C,GAAyBF,iBCGVO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3a361d33.chunk.js","sourcesContent":["// @flow\nimport { toPairs } from 'lodash';\n\ntype ModifiersType = { [string]: boolean } | string | Array<string> | void;\n\nexport class BemHelper {\n  blockName: string;\n\n  _elementSeparator = '__';\n\n  _modifierSeparator = '--';\n\n  constructor(blockName: string) {\n      this.blockName = blockName;\n  }\n\n  block(): string {\n      return this.blockName;\n  }\n\n  element(elementName: string): string {\n      return `${this.blockName}${this._elementSeparator}${elementName}`;\n  }\n\n  modifyBlock(modifiers: ModifiersType): string {\n      return this.modify(this.blockName, modifiers);\n  }\n\n  modifyElement(elementName: string, modifiers: ModifiersType): string {\n      return this.modify(this.element(elementName), modifiers);\n  }\n\n  modify(base: string, modifiers: ModifiersType): string {\n      if (typeof modifiers === 'string') {\n          return `${base}${this._modifierSeparator}${modifiers}`;\n      }\n      if (Array.isArray(modifiers)) {\n          return modifiers.map((modifier) => `${base}${this._modifierSeparator}${modifier}`).join(' ');\n      }\n      if (typeof modifiers === 'object') {\n          return toPairs(modifiers).reduce((styles, [modifier, enabled] = []) => {\n              if (enabled) {\n                  return [...styles, `${base}${this._modifierSeparator}${modifier}`];\n              }\n\n              return styles;\n          }, []).join(' ');\n      }\n\n      return base;\n  }\n}\n","// @flow\nimport { BemHelper } from './bem-helper';\n\nexport const createBlock = (block: string) => new BemHelper(block);\n","// @flow\nimport * as React from 'react';\nimport Slider from 'react-slick';\nimport { createBlock } from 'utils/bem-helper';\nimport './carousel.scss';\n\nconst block = createBlock('carousel');\n\nexport class Carousel extends React.PureComponent {\n  render() {\n    const { asNavFor, arrows = false, className = '', setCarouselRef = _ => _ } = this.props;\n\n    return (\n      <Slider\n        arrows={arrows}\n        asNavFor={asNavFor}\n        className={`${className} ${block.block()}`}\n        ref={setCarouselRef}\n      >\n        <div className={`${block.element('pic')} ${block.modifyElement('pic', '1')}`} />\n        <div className={`${block.element('pic')} ${block.modifyElement('pic', '2')}`} />\n        <div className={`${block.element('pic')} ${block.modifyElement('pic', '3')}`} />\n        <div className={`${block.element('pic')} ${block.modifyElement('pic', '4')}`} />\n        <div className={`${block.element('pic')} ${block.modifyElement('pic', '5')}`} />\n        <div className={`${block.element('pic')} ${block.modifyElement('pic', '6')}`} />\n      </Slider>\n    );\n  }\n}\n","import * as React from 'react';\nimport { createBlock } from 'utils/bem-helper';\nimport { Carousel } from 'components/carousel';\nimport './phone-layer.scss';\n\nconst block = createBlock('phone-layer');\n\nexport class PhoneLayer extends React.PureComponent {\n  render() {\n    return (\n      <div className={block.block()}>\n        <div className={block.element('container')}>\n          <Carousel  asNavFor={this.props.carouselRef} />\n        </div>\n        <div className={block.element('cover')} />\n      </div>\n    );\n  }\n}\n","import * as React from 'react';\nimport { createBlock } from 'utils/bem-helper';\nimport { Carousel } from 'components/carousel';\nimport './bg-layer.scss';\n\nconst block = createBlock('bg-layer');\n\nexport class BgLayer extends React.PureComponent {\n  render() {\n    return (\n      <div className={block.block()}>\n        <Carousel setCarouselRef={this.props.setCarouselRef} className={block.element('carousel')} />\n      </div>\n    );\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { createBlock } from 'utils/bem-helper';\nimport { PhoneLayer } from 'components/phone-layer';\nimport { BgLayer } from 'components/bg-layer';\nimport './app.scss';\n\nconst block = createBlock('App');\n\nexport class App extends React.PureComponent {\n  state = {\n    carouselRef: null,\n  };\n\n  setCarouselRef = (carouselRef) => this.setState({ carouselRef })\n\n  render() {\n    return (\n      <div className={block.block()}>\n        <BgLayer setCarouselRef={this.setCarouselRef} />\n        <PhoneLayer carouselRef={this.state.carouselRef} />\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}